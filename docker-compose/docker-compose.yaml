services:
  sample-process-service-v1:
    container_name: sample-process-service-v1
    image: 'dev.local/sample-process-service:1.0.0'
    ports:
      - '8081:8080'
    environment:
      QUARKUS_HTTP_CORS_ORIGINS: /.*/
      QUARKUS_DATASOURCE_JDBC_URL: 'jdbc:postgresql://postgresql:5432/kogito'
      QUARKUS_DATASOURCE_REACTIVE_URL: 'postgresql://postgresql:5432/kogito'
      QUARKUS_DATASOURCE_USERNAME: kogito-user
      QUARKUS_DATASOURCE_PASSWORD: kogito-pass
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      KOGITO_SERVICE_URL: 'http://localhost:8081'
      QUARKUS_FLYWAY_MIGRATE-AT-START: true
      QUARKUS_FLYWAY_OUT_OF_ORDER: true
      QUARKUS_FLYWAY_BASELINE_ON_MIGRATE: true
      QUARKUS_FLYWAY_BASELINE_VERSION: 0.0
      QUARKUS_FLYWAY_LOCATIONS: "classpath:/db/migration,classpath:/db/data-audit/postgresql"
      QUARKUS_FLYWAY_TABLE: FLYWAY_RUNTIME_SERVICE
    depends_on:
      postgresql:
        condition: service_healthy
  kogito-management-console:
    container_name: kogito-management-console
    image: apache/incubator-kie-kogito-management-console:main
    ports:
      - '8280:8080'
    depends_on:
      keycloak:
        condition: service_started
    volumes:
      - './svg/:/home/kogito/data/svg/'
    environment:
      KOGITO_CONSOLES_KEYCLOAK_HEALTH_CHECK_URL: >-
        http://localhost:8480/realms/kogito/.well-known/openid-configuration
      KOGITO_CONSOLES_KEYCLOAK_URL: 'http://localhost:8480'
      KOGITO_CONSOLES_KEYCLOAK_REALM: kogito
      KOGITO_CONSOLES_KEYCLOAK_CLIENT_ID: kogito-console-quarkus
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_KOGITO_ENV_MODE: "PROD"
      RUNTIME_TOOLS_MANAGEMENT_CONSOLE_DATA_INDEX_ENDPOINT: http://localhost:8081/graphql
  kogito-task-console:
    container_name: kogito-task-console
    image: apache/incubator-kie-kogito-task-console:main
    ports:
      - '8380:8080'
    depends_on:
      keycloak:
        condition: service_started
    environment:
      KOGITO_CONSOLES_KEYCLOAK_HEALTH_CHECK_URL: >-
        http://localhost:8480/realms/kogito/.well-known/openid-configuration
      KOGITO_CONSOLES_KEYCLOAK_URL: 'http://localhost:8480'
      KOGITO_CONSOLES_KEYCLOAK_REALM: kogito
      KOGITO_CONSOLES_KEYCLOAK_CLIENT_ID: kogito-console-quarkus
      RUNTIME_TOOLS_TASK_CONSOLE_KOGITO_ENV_MODE: "PROD"
      RUNTIME_TOOLS_TASK_CONSOLE_DATA_INDEX_ENDPOINT: http://localhost:8081/graphql
      RUNTIME_TOOLS_TASK_CONSOLE_KOGITO_TASK_STATES_LIST: "Ready,Reserved,Completed,Aborted,Skipped"
      RUNTIME_TOOLS_TASK_CONSOLE_KOGITO_TASK_ACTIVE_STATES_LIST: "Ready,Reserved"
  postgresql:
    container_name: postgresql
    image: 'postgres:16.1-alpine3.19'
    ports:
      - '5432:5432'
    volumes:
      - './sql:/docker-entrypoint-initdb.d:Z'
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - kogito
        - '-U'
        - kogito-user
      timeout: 45s
      interval: 10s
      retries: 50
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  keycloak:
    container_name: keycloak
    #image: quay.io/keycloak/keycloak:legacy
    #image: quay.io/keycloak/keycloak:25.0.6
    image: quay.io/keycloak/keycloak:23.0.7-0
    ports:
      - '8480:8080'
    #depends_on:
    #  postgresql:
    #    condition: service_healthy
    volumes:
      #- ./keycloak/kogito-realm.json:/tmp/kogito-realm.json
      - ./keycloak:/opt/keycloak/data/import
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:8080/realms/kogito'
      interval: 2s
      timeout: 1s
      retries: 50
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgresql
      DB_DATABASE: keycloak
      DB_USER: kogito-user
      DB_SCHEMA: public
      DB_PASSWORD: kogito-pass
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      start-dev --import-realm --hostname-port=8480 --health-enabled=true